# Graphing data

# Matplotlib
# http://matplotlib.org/citing.html

# import matplotlib libraries
import matplotlib
import matplotlib.pyplot as pp

# import numpy
import numpy as np

# step increments
steps=[250, 500, 750, 1000, 1250, 1500, 1750, 2000, 2500, 3000]

e250=0.4513
ue250=[0.41035, 0.448666, 0.41759, 0.272029, 0.583405, 0.632273, 0.522458, 0.429948, 0.289623, 0.444679, 0.485332, 0.603858, 0.362667, 0.672182, 0.499737, 0.441303, 0.24626, 0.361574]
t250=341

e500=0.2500
ue500=[0.237325, 0.195812, 0.280171, 0.226809, 0.275289, 0.186347, 0.236226, 0.20412, 0.112417, 0.277758, 0.302235, 0.257187, 0.236484, 0.403778, 0.336641, 0.273846, 0.264286, 0.192836] 
t500=715

e750=0.1346
ue750=[0.147782, 0.062828, 0.195698, 0.088028, 0.117261, 0.09805, 0.095253, 0.136114, 0.097403, 0.138187, 0.151195, 0.138232, 0.209939, 0.209339, 0.22658, 0.147829, 0.088503, 0.073736]
t750=1044

e1000=0.0764
ue1000=[0.090727, 0.053114, 0.114318, 0.032591, 0.093008, 0.026915, 0.062912, 0.03169, 0.041947, 0.078352, 0.10645, 0.066436, 0.123729, 0.07837, 0.200686, 0.074688, 0.044692, 0.055672]
t1000=1347

e1250=0.0558
ue1250=[0.06623, 0.021545, 0.070836, 0.032397, 0.048669, 0.022891, 0.060753, 0.023061, 0.021899, 0.043566, 0.068054, 0.024856, 0.140773, 0.069365, 0.1599, 0.03361, 0.069018, 0.026283]
t1250=1666

e1500=0.0360
ue1500=[0.046634, 0.014417, 0.053432, 0.019819, 0.014974, 0.013522, 0.049975, 0.009694, 0.016849, 0.041106, 0.03978, 0.019441, 0.099819, 0.054469, 0.108243, 0.022368, 0.002719, 0.020151]
t1500=2097

e1750=0.0310
ue1750=[0.034706, 0.016795, 0.034735, 0.023395, 0.013372, 0.031003, 0.01233, 0.00998, 0.011547, 0.046362, 0.040407, 0.01971, 0.063811, 0.037329, 0.111191, 0.019203, 0.007606, 0.018712]
t1750=2406

e2000=0.02782233333333333
ue2000=[0.034863, 0.014794, 0.03118, 0.023127, 0.011818, 0.010686, 0.018298, 0.009642, 0.011736, 0.053074, 0.027743, 0.013661, 0.076826, 0.033791, 0.074956, 0.016132, 0.01946, 0.019015]
t2000=3837

e2500=0.02512472222222222
ue2500=[0.025913, 0.013163, 0.03075, 0.022859, 0.010901, 0.010768, 0.011223, 0.010198, 0.012793, 0.031944, 0.026195, 0.013863, 0.110173, 0.029142, 0.050538, 0.015332, 0.009271, 0.017219]
t2500=3474

e3000=0.019513666666666665
ue3000=[0.026118, 0.012793, 0.021177, 0.018021, 0.01062, 0.010791, 0.011169, 0.009803, 0.011743, 0.02305, 0.022124, 0.013409, 0.045183, 0.026933, 0.052296, 0.014432, 0.007473, 0.014111]
t3000=4187

e250_15=0.4467621666666667
ue250_15=[0.444484, 0.318064, 0.454979, 0.356015, 0.3412, 0.526109, 0.451765, 0.258461, 0.277783, 0.453721, 0.538436, 0.655374, 0.343558, 0.620878, 0.468007, 0.573698, 0.572793, 0.386394]
t250_15=392

e500_15=0.23884872222222223
ue500_15=[0.312258, 0.115149, 0.289806, 0.195291, 0.172103, 0.206408, 0.246488, 0.304373, 0.134318, 0.26667, 0.297754, 0.32688, 0.210994, 0.417155, 0.33794, 0.238408, 0.003028, 0.224254]
t500_15=787

e750_15=0.13353233333333334
ue750_15=[0.186939, 0.065836, 0.234531, 0.158207, 0.094414, 0.070392, 0.101894, 0.032274, 0.063957, 0.132968, 0.155066, 0.138135, 0.1796, 0.215798, 0.243237, 0.12267, 0.070695, 0.136969]
t750_15=1177

e1000_15=0.091146
ue1000_15=[0.108668, 0.038952, 0.150218, 0.072115, 0.13927, 0.041358, 0.095826, 0.031152, 0.049239, 0.085902, 0.112061, 0.100356, 0.122943, 0.086363, 0.22201, 0.075935, 0.030539, 0.077721]
t1000_15=1585

e1250_15=0.06103655555555555
ue1250_15=[0.08519, 0.024881, 0.103996, 0.03636, 0.057809, 0.033943, 0.046585, 0.038051, 0.031988, 0.079502, 0.088053, 0.060561, 0.086444, 0.066021, 0.161213, 0.049083, 0.002136, 0.046842]
t1250_15=1898

e1500_15=0.03920555555555556
ue1500_15=[0.059704, 0.01575, 0.073113, 0.026774, 0.0181, 0.023227, 0.012525, 0.009389, 0.016559, 0.05744, 0.057427, 0.036487, 0.071262, 0.050046, 0.093029, 0.043128, 0.002031, 0.039709]
t1500_15=2279

e1750_15=0.031624555555555565
ue1750_15=[0.053388, 0.015356, 0.042437, 0.025281, 0.010198, 0.011055, 0.031145, 0.009162, 0.010624, 0.037137, 0.046349, 0.018053, 0.047502, 0.047447, 0.11054, 0.022526, 0.005994, 0.025048]
t1750_15=2655

e2000_15=0.02620983333333333
ue2000_15=[0.040137, 0.011666, 0.040021, 0.017246, 0.010268, 0.009597, 0.013906, 0.011204, 0.009475, 0.018989, 0.036845, 0.014209, 0.071292, 0.038076, 0.087472, 0.0192, 0.007399, 0.014775]
t2000_15=3038

e2500_15=0.021069388888888888
ue2500_15=[0.032602, 0.010784, 0.032478, 0.02398, 0.008878, 0.008608, 0.009353, 0.008958, 0.010504, 0.019451, 0.028952, 0.013219, 0.044501, 0.032758, 0.058931, 0.016575, 0.005839, 0.012878]
t2500_15=3961

e3000_15=0.01812066666666667
ue3000_15=[0.02302, 0.011638, 0.023378, 0.021131, 0.009458, 0.009352, 0.009252, 0.00916, 0.009887, 0.020487, 0.026641, 0.013305, 0.03983, 0.028445, 0.034902, 0.015257, 0.007018, 0.014011]
t3000_15=4704

ue_k10=(ue250, ue500, ue750, ue1000, ue1250, ue1500, ue1750, ue2000, ue2500, ue3000)
ue_k15=(ue250_15, ue500_15, ue750_15, ue1000_15, ue1250_15, ue1500_15, ue1750_15, ue2000_15, ue2500_15, ue3000_15)

# prepare standard deviation of user error for each steps
# n.b. not using float64 so not max. accuracy
ue_k10_sds=()
for ue in ue_k10:
    ue_k10_sds += (np.std(ue), )
ue_k15_sds=()
for ue in ue_k15:
    ue_k15_sds += (np.std(ue), )

# pp.plot(steps, list(ue_k10_stds), 'ro')
# pp.show()

# prepare total error
total_error_k10=[e250, e500, e750, e1000, e1250, e1500, e1750, e2000, e2500, e3000]
total_error_k15=[e250_15, e500_15, e750_15, e1000_15, e1250_15, e1500_15, e1750_15, e2000_15, e2500_15, e3000_15]

# pp.plot(steps, total_error)
# pp.show()

# time per factorization
times_k10=[t250, t500, t750, t1000, t1250, t1500, t1750, t2000, t2500, t3000]
times_k15=[t250_15, t500_15, t750_15, t1000_15, t1250_15, t1500_15, t1750_15, t2000_15, t2500_15, t3000_15]
# this plot includes a line of best fit for the data
# - it appears nicely linear :-)
# pfit=np.polyfit(steps, times, 1)
# yfit=np.polyval(pfit, steps)
# pp.plot(steps, time, 'bo', steps, yfit, 'k')

# now to do some curvy plots...
# first create a linear space between our steps
# with lots of points in it
# spline_x=np.linspace(steps[0], steps[-1], 250)
# now generate spline
# from scipy.interpolate import spline
# spline=spline(steps, total_error, spline_x)
# now plot the graph with the spline over the observed data points
# pp.plot(steps, total_error, 'bo', spline_x, spline, 'k')
# p.show()


